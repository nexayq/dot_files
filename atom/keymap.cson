# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * http://flight-manual.atom.io/using-atom/sections/basic-customization/#customizing-keybindings
# * http://flight-manual.atom.io/behind-atom/sections/keymaps-in-depth/
#
# If you're having trouble with your keybindings not working, try the
# Keybinding Resolver: `Cmd+.` on macOS and `Ctrl+.` on other platforms. See the
# Debugging Guide for more information:
# * http://flight-manual.atom.io/hacking-atom/sections/debugging/#check-the-keybindings
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#configuring-with-cson

# NK Custom

# Packages
    # Rainbow parenthesis
        # > apm install johngeorgewright/atom-rainbow

# See command names (ex. pane:close) :
    # Edit -> Preferences -> Keybindings

'atom-text-editor.vim-mode-plus:not(.insert-mode)':
    # https://atom.io/packages/keystroke

    # Toggle line comments - 'space space'
    'space space': 'editor:toggle-line-comments'

    # Close pane - 'space w'
    'space w': 'pane:close'

    # Focus panes - 'space 2' - next, 'space 1' - previous
    'space 2': 'window:focus-next-pane'
    'space 1': 'window:focus-previous-pane'

    # Show Atom preferences pallete settings/commands
    'space p': 'command-palette:toggle'

# override default key bindings
'.workspace .editor:not(.mini)':
  'ctrl-j': 'pane:show-next-item'
  'ctrl-k': 'pane:show-previous-item'
